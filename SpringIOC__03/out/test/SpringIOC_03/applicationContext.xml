<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd">

<!--    注解创建Dao,Service,Controller（控制器：控制网站跳转逻辑）-->
<!--    通过bean上添加某些注解，可以快速的将bean加入到ioc容器中
        某个类上添加上任何一个注解都能将这个组件加入到ioc容器中
        Spring有四个注解
        1.@Controller：控制器（推荐给控制器层（Servlet包下））
        2.@Service：业务逻辑层：BookService
        3.@Repository:数据库层（持久层）:Dao
        4.@Component:给不属于以上几层的组件添加这个注解；
        注解可以随便加,Spring不会去验证组件是否如你注解所说。
        推荐各自层加各自层；
        使用注解 将组件快速的加入到容器中需要几步：
            1.给要添加的组件上标四个注解的任何一个
            2.告诉Spring自动扫描加了注解的组件；依赖context名称空间
            3.导入aop包，支持注解模式
            @Scope(value = "prototype")：默认多实例
            注解只能加自己写的
        -->
<!--    自动扫描-->

<!--    type="annotation";指定排除规则；按照注解进行排除。标注了指定注解的组件不要 expression="":注解的全类名-->

    <!--    使用context:exclude-filter指定扫描包时不包含的类()可以排除一些不要的东西-->
    <context:component-scan base-package="Servlet">
        <context:exclude-filter type="assignable" expression="dao.BookDao"/>
    </context:component-scan>
    <!--    使用context:include-filter指定扫描包时不包含的类()可以排除一些不要的东西-->
    <context:component-scan base-package="service">
<!--        assignable:按类名来选择
            annotation:按照注解类型来选择
-->
        <context:include-filter type="assignable" expression="service.BookService"/>
    </context:component-scan>
<!--    DI(依赖注入)-->
<!--使用@Autowired注解来实现根据类型实现自动装配
    @Autowired原理：
        1.按照类型去容器中找到对应的组件
            1.找到一个：直接赋值
            2.没找到：就抛异常
            3.找到多个：装配上？（继续找）
                1.按照成员变量名ID进行继续匹配
                    1.匹配上：
                    2.没有匹配：
-->
    <context:component-scan base-package="dao"></context:component-scan>
</beans>