<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">


<display-name>Archetype Created Web Application</display-name>
  <!--  声明SpringMVC的核心对象
        当我们去访问的时候报错，文件没有找到
        错误原因
          在Servlet的init（）方法中创建springMVc使用的容器对象，没有找到配置文件
          配置文件的默认路径是： /WEB-INF/<servlet-name>-servlet.xml
  -->
  <servlet>
    <servlet-name>myweb</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--    自定义配置文件的位置-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
<!--    启动时进行装载对象
        表示服务器Tomcat创建对象的顺序，是个整数值，

        数值越小，创建对象的时间就越早
        使用斜杠“/”，导致中央调度器为了默认的default servlet。
        如果项目中，重要调度器设置了"/"，动态资源能访问，静态资源不能访问
        需要处理静态资源的处理
        处理方法：
          加控制器处理静态资源
-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>myweb</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
<!--  声明过滤器，框架提供的，解决post请求中乱码问题-->
<filter>
  <filter-name>CharacterEncodingFilter</filter-name>
  <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
  <init-param>
    <param-name>encoding</param-name>
    <param-value>utf-8</param-value>
  </init-param>
  <init-param>
    <param-name>forceRequestEncoding</param-name>
<!--    强制请求对象（request）对象使用恩仇藕丁的编码方式-->
    <param-value>true</param-value>
  </init-param>
  <init-param>
    <param-name>forceReponseEncoding</param-name>
    <!--    强制请求对象（request）对象使用恩仇藕丁的编码方式-->
    <param-value>true</param-value>
  </init-param>
</filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
<!--    /*强制所有请求，先经过过滤器-->
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>
