<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                  http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <servlet>
        <!--     注册SpringMVC的核心对象DispatcherServlet(前端控制器)
                 需要在tomcat服务器启动后创建DispatcherServlet对象的实例，创建的过程中会同时创建SpringMVC容器对象
                 读取SpringMVC配置文件，把这个配置文件中的对象都创建好，当用户发起请求时就可以直接使用对象了

                 Servlet创建的时候会执行init方法
                 WebApplicationContext ctx = new ClassPathXmlApplicationContext("spring-mvc.xml")
                // 把容器对象放到ServletContext中
                 getServletContext().setAttribute(key, ctx);
                 -->

        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--     自定义springmvc读取的配置文件的位置-->
        <!--tomcat启动时就加载-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <!--     url pattern可以使用两种值
                 1.使用拓展名的方式，语法为*.xxx，其中xxx是自己定义的拓展名方式，常用的有*.do  *.action *.mvc等
                 http://localhost:8080/mySpringMVC/some.do

                 2.使用斜杠 /
                 -->
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/url</url-pattern>
    </servlet-mapping>
</web-app>
